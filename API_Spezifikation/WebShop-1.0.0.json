{
  "swagger": "2.0",
  "info": {
    "description": "API for Core, Composite and API Services used in the VS Web Shop",
    "version": "1.0.0",
    "title": "WebShop"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/p7695/WebShop/1.0.0",
  "tags": [
    {
      "name": "users",
      "description": "User related stuff"
    },
    {
      "name": "products",
      "description": "Product related stuff"
    },
    {
      "name": "category",
      "description": "category stuff"
    },
    {
      "name": "catalogue",
      "description": "catalogue stuff"
    },
    {
      "name": "role",
      "description": "Role stuff"
    },
    {
      "name": "account",
      "description": "Account stuff"
    },
    {
      "name": "api-service",
      "description": "api-service-level stuff"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get a user profile",
        "description": "Get a user profile by name",
        "operationId": "getUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter option for the Users",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add a new user",
        "description": "Add a new user",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/{userID}": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update an existing User Profile",
        "description": "Update an existing User Profile",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "UserID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User object that will be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete an existing User Profile",
        "description": "Delete an existing User Profile",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "UserID",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get all products/specificy product by name",
        "description": "Get all products/specificy product by name",
        "operationId": "getProducts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter option for the Users",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Add a new product",
        "description": "Add a new product to the store with an existing category",
        "operationId": "addProduct",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "webstore_auth": [
              "admin"
            ]
          }
        ]
      }
    },
    "/product/{productID}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get the detailed view to a specific product",
        "description": "Return the detailed view to a given product ID",
        "operationId": "detailedProduct",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Update a product from the webshop",
        "description": "Update a product from the webshop",
        "operationId": "updateProduct",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated product information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "webstore_auth": [
              "admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Remove a product from the web shop",
        "description": "Remove a product from the web shop",
        "operationId": "removeProduct",
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "Product to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Product successfully deleted"
          },
          "404": {
            "description": "Product not found"
          }
        },
        "security": [
          {
            "webstore_auth": [
              "admin"
            ]
          }
        ]
      }
    },
    "/role": {
      "post": {
        "tags": [
          "role"
        ],
        "summary": "Add a new role",
        "description": "Add a new role",
        "operationId": "addRole",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Role to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "webstore_auth": [
              "admin"
            ]
          }
        ]
      }
    },
    "/role/{roleID}": {
      "delete": {
        "tags": [
          "role"
        ],
        "summary": "Remove a role",
        "description": "Remove a role",
        "operationId": "removeRole",
        "parameters": [
          {
            "name": "roleID",
            "in": "path",
            "description": "Role to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Role successfully deleted"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "security": [
          {
            "webstore_auth": [
              "admin"
            ]
          }
        ]
      }
    },
    "/category": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "Get categories from the store. Sorted by a filter",
        "description": "Get categories from the  store",
        "operationId": "getCategoryByFilter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter option for an advanced search within the webshop",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "category"
        ],
        "summary": "Add a new category",
        "description": "Add a new category",
        "operationId": "addCategory",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "category object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/category/{categoryID}": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "Get all products to a given category ID",
        "description": "Returns all products from a category",
        "operationId": "productsIncategory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": [
          "category"
        ],
        "summary": "Update a category from the web shop",
        "description": "Update a category from the web shop",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "description": "category to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "category successfully deleted"
          },
          "404": {
            "description": "category not found"
          }
        },
        "security": [
          {
            "webstore_auth": [
              "admin"
            ]
          }
        ]
      }
    },
    "/catalogue": {
      "get": {
        "tags": [
          "catalogue"
        ],
        "summary": "Get information from the catalog",
        "description": "Get information from the catalog",
        "operationId": "getCatalog",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter option for an advanced search within the webshop",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/catalogue/{categoryID}": {
      "delete": {
        "tags": [
          "catalogue"
        ],
        "summary": "Remove a category and all assigned products",
        "description": "Removes a category and all products assigned to that category from the web shop",
        "operationId": "removeCategory",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "description": "category to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "category successfully deleted"
          },
          "404": {
            "description": "category not found"
          }
        },
        "security": [
          {
            "webstore_auth": [
              "admin"
            ]
          }
        ]
      }
    },
    "/account": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Get information about the accounts",
        "description": "Get information about the accounts",
        "operationId": "getAllAccounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter option for an advanced search within the webshop",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/account/{roleID}": {
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "Remove a role and updates the corresponding users´ roles with a lower role",
        "description": "Remove a role and updates the corresponding users´ roles with a lower role",
        "operationId": "removeCRole",
        "parameters": [
          {
            "name": "roleID",
            "in": "path",
            "description": "role to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "category successfully deleted"
          },
          "404": {
            "description": "category not found"
          }
        },
        "security": [
          {
            "webstore_auth": [
              "admin"
            ]
          }
        ]
      }
    },
    "/api-catalog/addCategory": {
      "post": {
        "tags": [
          "api-service"
        ],
        "summary": "add a new category for products",
        "description": "adds a new category for products to the store",
        "operationId": "addCategoryAction",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "category object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "webstore_auth": [
              "admin"
            ]
          }
        ]
      }
    },
    "/api-catalog/addProduct": {
      "post": {
        "tags": [
          "api-service"
        ],
        "summary": "add a new product",
        "description": "adds a new product to the store",
        "operationId": "addProductAction",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "product that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "webstore_auth": [
              "admin"
            ]
          }
        ]
      }
    },
    "/api-catalog/deleteCategory/{categoryID}": {
      "delete": {
        "tags": [
          "api-service"
        ],
        "summary": "Remove a category and all assigned products",
        "description": "Removes a category and all products assigned to that category from the web shop",
        "operationId": "deleteCategoryAction",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "description": "category to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "category successfully deleted"
          },
          "404": {
            "description": "category not found"
          }
        },
        "security": [
          {
            "webstore_auth": [
              "admin"
            ]
          }
        ]
      }
    },
    "/api-catalog/deleteProduct/{productID}": {
      "delete": {
        "tags": [
          "api-service"
        ],
        "summary": "Remove a product from the web shop",
        "description": "Remove a product from the web shop",
        "operationId": "deleteProductAction",
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "Product to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Product successfully deleted"
          },
          "404": {
            "description": "Product not found"
          }
        },
        "security": [
          {
            "webstore_auth": [
              "admin"
            ]
          }
        ]
      }
    },
    "/api-catalog/getCategories": {
      "get": {
        "tags": [
          "api-service"
        ],
        "summary": "Get categories from the store.",
        "description": "Get all categories for the store",
        "operationId": "getCategoriesAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api-catalog/getProducts": {
      "get": {
        "tags": [
          "api-service"
        ],
        "summary": "Get all products",
        "description": "Get all products",
        "operationId": "getProductsAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api-catalog/getProductDetails/{productID}": {
      "get": {
        "tags": [
          "api-service"
        ],
        "summary": "Get the detailed view to a specific product",
        "description": "Return the detailed view to a given product ID",
        "operationId": "getProductDetailsAction",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/api-catalog/searchCatalogue": {
      "post": {
        "tags": [
          "api-service"
        ],
        "summary": "search product from the catalog",
        "description": "get products from the catalog",
        "operationId": "searchCatalogueAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter option for an advanced search within the webshop",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api-user/searchAccount": {
      "post": {
        "tags": [
          "api-service"
        ],
        "summary": "search Account by Name or ID",
        "description": "search Account",
        "operationId": "searchAccountAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter option for an advanced search within the webshop",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "webstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://localhost:8889/oauth",
      "flow": "implicit",
      "scopes": {
        "admin": "do admin stuff"
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "productname": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Query": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    }
  }
}